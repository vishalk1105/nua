import React, { useCallback, useEffect, useState } from "react";
import MainLayout from "../layout/MainLayout";
import ReactInput from "../app/components/ReactInput";
import ReactButton from "../app/components/ReactButton";
import ReactPills from "../app/components/ReactPills";
import ReactPagination from "../app/components/ReactPagination";
import ReactDropDown from "../app/components/ReactDropDown";
const Home = () => {
  const [bookData, setBookData] = useState([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [authorName, setAthorName] = useState("");
  const [booksPerPage, setBooksPerPage] = useState(10);
  const fetchData = useCallback(async () => {
    try {
      const data = await fetch(
        `https://openlibrary.org/search.json?q=crime+and+punishment&fields=ratings_average,%20author_name,%20title,%20first_publish_year,%20subject,%20author_birth_date,%20author_top_work&limit=${booksPerPage}`
      );
      const resData = await data.json();
      console.log(resData);
      setBookData(resData.docs);
    } catch (err) {
      console.log(err);
    }
  }, [booksPerPage]);
  useEffect(() => {
    fetchData();
  }, [fetchData]);

  const recordsPerPage = 10;
  const indexOfLastRecord = currentPage * recordsPerPage;
  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;
  const currentRecords = bookData.slice(indexOfFirstRecord, indexOfLastRecord);
  const numberPages = Math.ceil(bookData.length / recordsPerPage);

  const recordPerPage = [10, 50, 100];
  return (
    <MainLayout>
      <div className="my-4">
        <div className="d-flex gap-4">
          <ReactInput
            reactInputClassName={"w-25"}
            value={authorName}
            onChange={(e) => setAthorName(e.target.value)}
          />
          <ReactButton
            btnText={"Search Author"}
            btnClass={"searchBtn"}
            onClickfn={fetchData}
          />
          <ReactPagination
            nPages={numberPages}
            currentPage={currentPage}
            setCurrentPage={setCurrentPage}
          />
          <ReactDropDown
            reacordPerPage={recordPerPage}
            booksPerPage={booksPerPage}
            setBooksPerPage={setBooksPerPage}
            dropDownClass={"pageDropDownClass"}
          />
        </div>
        <table className="table text-center">
          <thead>
            <tr>
              <th scope="col">Average ratings</th>
              <th scope="col">Author Name</th>
              <th scope="col">Title</th>
              <th scope="col">Published Year</th>
              <th scope="col">Subject</th>
              <th scope="col">Author Birth Date</th>
              <th scope="col">Author Top Work</th>
            </tr>
          </thead>
          <tbody>
            {currentRecords.map((ele, index) => {
              return (
                <tr key={index}>
                  <td>{ele.ratings_average}</td>
                  <td>
                    {ele.author_name
                      ? ele.author_name.map((aut, i) => (
                          <ReactPills
                            key={i}
                            data={aut}
                            pillClass={"subjectPillClass"}
                          />
                        ))
                      : "N/A"}
                  </td>
                  <td>{ele.title}</td>
                  <td>{ele.first_publish_year}</td>
                  <td width={"100px"}>
                    {ele.subject
                      ? ele.subject.map((sub, i) => (
                          <ReactPills
                            key={i}
                            data={sub}
                            pillClass={"subjectPillClass"}
                          />
                        ))
                      : "N/A"}
                  </td>
                  <td>{}</td>
                  <td>{}</td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    </MainLayout>
  );
};

export default Home;
